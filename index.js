const lixiList = [
  { value: 10, text: "B·∫°n nh·∫≠n ƒë∆∞·ª£c 10,000 VNƒê! üéÅ", percentage: 30 }, //30% - xuat hien 30 lan
  {
    value: 20,
    text: "Ch√∫c m·ª´ng! B·∫°n nh·∫≠n ƒë∆∞·ª£c 20,000 VNƒê! üéâ",
    percentage: 10,
  },
  { value: 50, text: "Wow! B·∫°n nh·∫≠n ƒë∆∞·ª£c 50,000 VNƒê! üßß", percentage: 8 },
  { value: 100, text: "B·∫°n nh·∫≠n ƒë∆∞·ª£c 100,000 VNƒê! ü§ë", percentage: 2 },
  {
    value: 200,
    text: "Ch√∫c m·ª´ng nƒÉm m·ªõi! B·∫°n nh·∫≠n ƒë∆∞·ª£c 200,000 VNƒê! ü•≥",
    percentage: 0,
  },
  {
    value: 0,
    text: "Ch√∫c m·ª´ng nƒÉm m·ªõi, th·ª≠ l·∫°i l·∫ßn sau nh√©! üòÖ",
    percentage: 50,
  },
];

// H√†m x√°o tr·ªôn m·∫£ng s·ª≠ d·ª•ng thu·∫≠t to√°n Fisher-Yates Shuffle
function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1)); // Ch·ªçn m·ªôt ch·ªâ s·ªë ng·∫´u nhi√™n t·ª´ 0 ƒë·∫øn i
    [array[i], array[j]] = [array[j], array[i]]; // Ho√°n ƒë·ªïi v·ªã tr√≠ ph·∫ßn t·ª≠
  }
}

// T·∫°o m·∫£ng t·ª∑ l·ªá d·ª±a tr√™n danh s√°ch lixiList
function createWeightedArray(list) {
  const weightedArray = [];
  list.forEach((item) => {
    for (let i = 0; i < item.percentage; i++) {
      weightedArray.push(item.value);
    }
  });
  shuffleArray(weightedArray); // X√°o tr·ªôn m·∫£ng sau khi t·∫°o
  return weightedArray;
}

// M·∫£ng t·ª∑ l·ªá ƒë√£ ƒë∆∞·ª£c t·∫°o
const weightedLixiArray = createWeightedArray(lixiList);
console.log(weightedLixiArray);

function getRandomLixi() {
  const randomIndex = Math.floor(Math.random() * weightedLixiArray.length);
  return {
    value: weightedLixiArray[randomIndex],
    message:
      lixiList.find((lixi) => lixi.value === weightedLixiArray[randomIndex])
        ?.text || "Ch√∫c m·ª´ng nƒÉm m·ªõi, th·ª≠ l·∫°i l·∫ßn sau nh√©! üòÖ",
  };
}

// Ph·∫ßn t·ª≠ DOM
const lixiImage = document.getElementById("lixiImage");
const notification = document.getElementById("notification");

// H√†m hi·ªÉn th·ªã l√¨ x√¨ ng·∫´u nhi√™n
function showLixi() {
  const lixi = getRandomLixi();
  console.log(lixi);

  // Hi·ªÉn th·ªã th√¥ng b√°o
  notification.textContent = `üéâ ${lixi.message}`;
  notification.classList.add("show");
  // ·∫®n th√¥ng b√°o sau 3 gi√¢y
  setTimeout(() => {
    notification.classList.remove("show");
  }, 2000);

  // Th√™m hi·ªáu ·ª©ng rung
  lixiImage.classList.add("shake");
  setTimeout(() => lixiImage.classList.remove("shake"), 1000);
}

// H√†m reset l√¨ x√¨
function resetLixi() {
  notification.classList.remove("show");
}

// Th√™m s·ª± ki·ªán click v√†o bao l√¨ x√¨
lixiImage.addEventListener("click", showLixi);

// Kh·ªüi t·∫°o Shake.js
const shakeEvent = new Shake({
  threshold: 15, // ƒê·ªô nh·∫°y c·ªßa l·∫Øc
  timeout: 1000, // Th·ªùi gian gi·ªØa c√°c l·∫ßn l·∫Øc
});

// L·∫Øng nghe s·ª± ki·ªán l·∫Øc
shakeEvent.start();

window.addEventListener(
  "shake",
  function () {
    showLixi();
  },
  false
);

// ƒê·∫£m b·∫£o d·ª´ng l·∫Øng nghe khi kh√¥ng c·∫ßn thi·∫øt
window.addEventListener("beforeunload", function () {
  shakeEvent.stop();
});
